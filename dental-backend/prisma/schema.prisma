// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumRoles {
  OWNER
  ASSOCIATED
  CLIENT
}

enum AppointmentState {
  PENDING
  CANCEL
  REALIZED
}


model Users {
  id Int @id   @default(autoincrement())
  first_name String
  last_name String
  role  Roles @relation(fields: [role_name], references: [name])
  role_name EnumRoles
  dentist  Dentist?
  patient  Patient?
}

model Roles {
  id Int @id   @default(autoincrement())
  name EnumRoles @unique
  user_id Users[]
}

model Dentist {
  id Int @id   @default(autoincrement())
  name String
  surname String
  appointments Appointment[]
  user Users  @relation(fields: [user_id], references: [id])
  user_id Int @unique
}


model Patient {
  id Int @id   @default(autoincrement())
  name String
  surname String
  gender  String
  dni Int
  appointments Appointment[]
  user Users  @relation(fields: [user_id], references: [id])
  user_id Int @unique
}


model Appointment {
  id Int  @id   @default(autoincrement())
  date DateTime
  dentist  Dentist @relation(fields: [dentistId], references: [id])
  dentistId Int 
  patient Patient @relation(fields: [patientId],references: [id])
  patientId Int 
  state AppointmentState
  results String
}